# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

stages:

- stage: 'Build'
  variables:
    buildConfiguration: 'Release'
    major: 0
    minor: 1
    patch: 0

  jobs:
  - job:
    pool:
      vmImage: 'ubuntu-latest'

    workspace:
      clean: all

    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk'
      inputs:
        packageType: sdk
        version: 2.2.x
        installationPath: $(Agent.ToolsDirectory)/dotnet
    
    - task: DotNetCoreCLI@2
      displayName: "NuGet Restore"
      inputs:
        command: restore
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: "Build Solution"
      inputs:
        command: build
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)'

    - script: >
        dotnet pack
        -c $(buildConfiguration) /p:PackageVersion=$(major).$(minor).$(patch) 
        -o $(Build.ArtifactStagingDirectory)/packages/releases 
        --no-build 
        --no-restore
        --include-source
        --include-symbols
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/release'))
      displayName: 'Create NuGet Package - Release Version'

    - script: >
        dotnet pack
        -c $(buildConfiguration) /p:PackageVersion=$(major).$(minor).$(patch)-preview-$(Build.BuildNumber)
        -o $(Build.ArtifactStagingDirectory)/packages/prereleases 
        --no-build 
        --no-restore
        --include-source
        --include-symbols
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
      displayName: 'Create NuGet Package - Prerelease Version'
        
    - publish: '$(Build.ArtifactStagingDirectory)/packages'
      artifact: 'packages'

- stage: 'PublishPrereleaseNuGetPackage'
  displayName: 'Publish Prerelease NuGet Package'
  dependsOn: 'Build'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  jobs:
  - job:
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - checkout: none

    - download: current
      artifact: 'packages'

    - task: DotNetCoreCLI@2
      displayName: 'Push NuGet Package'
      inputs:
        command: custom
        custom: nuget
        arguments: >
          push $(Pipeline.Workspace)/packages/prereleases/*.nupkg
          -s $(NuGetSourceServerUrl)
          -k $(NuGetSourceServerApiKey)

- stage: 'PublishReleaseNuGetPackage'
  displayName: 'Publish Release NuGet Package'
  dependsOn: 'Build'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/release'))
  jobs:
  - job:
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - checkout: none

    - download: current
      artifact: 'packages'

    - task: DotNetCoreCLI@2
      displayName: 'Push NuGet Package'
      inputs:
        command: custom
        custom: nuget
        arguments: >
          push $(Pipeline.Workspace)/packages/releases/*.nupkg
          -s $(NuGetSourceServerUrl)
          -k $(NuGetSourceServerApiKey)